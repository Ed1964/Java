package com.javarush.task.task31.task3101;


import java.io.*;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.stream.Collectors;

/*
Проход по дереву файлов
*/
public class Solution {
    public static void main(String[] args) {

        File path = new File(args[0]);
        String resultFileAbsolutePath = args[1]; // имя (полный путь) сущствующего файла, кот. будет содержать результат
        File originalFile = new File(resultFileAbsolutePath);
        File folder = originalFile.getParentFile();
        File newFile = new File(folder + "/allFilesContent.txt");
        FileUtils.renameFile(originalFile, newFile);
        FileInputStream inputStream;
        try(FileOutputStream fileOutputStream = new FileOutputStream(newFile)){


        List<File> fileList= Files.walk(Paths.get(path.getAbsolutePath()))
                    .filter(Files::isRegularFile)
                    .map(Path::toFile)
                    .filter(x->x.length()<=50) // фильтр до 50 байт
                    .sorted(Comparator.comparing(File::getName))// сортировка по имени
                    .collect(Collectors.toList());

        fileList.sort(Comparator.comparing(File::getName));

            for (File file : fileList)
            {
                inputStream = new FileInputStream(file);
                while (inputStream.available() > 0) {
                    fileOutputStream.write(inputStream.read());
                }
                fileOutputStream.write(System.lineSeparator().getBytes());
                fileOutputStream.flush();

                inputStream.close();
            }


        } catch (Exception e) {
            //
        }
    }
}
