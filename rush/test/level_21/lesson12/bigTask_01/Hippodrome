package com.javarush.task.task21.task2113;

import java.util.ArrayList;
import java.util.List;

public class Hippodrome {

    public static Hippodrome game;

    private List<Horse> horses;

    public List<Horse> getHorses() {
        return horses;
    }

    public Hippodrome(List<Horse> horses) {
        this.horses = horses;
    }

    public void move(){
        for(Horse horse: getHorses()){
            horse.move();
        }
    }

    public void print(){
        for(Horse horse: getHorses()){
            horse.print();
        }
        for (int i = 0; i<10; i++){
            System.out.println();
        }
    }

    public void run() throws InterruptedException {
        for(int i = 1; i<=100; i++){
            this.move();
            this.print();
            Thread.sleep(200);
        }
    }

    public Horse getWinner(){

        Horse win = null;

        double maxDistancee = Math.max(horses.get(0).distance,Math.max(horses.get(1).distance, horses.get(2).distance));
        if (maxDistancee == horses.get(0).distance){
            win = horses.get(0);
        }
        if (maxDistancee == horses.get(1).distance){
            win = horses.get(1);
        }
        if (maxDistancee == horses.get(2).distance){
            win = horses.get(2);
        }
        
        return  win;
    }

    public void printWinner(){
        System.out.println("Winner is " +   this.getWinner().getName() + "!");
    }



    public static void main(String[] args) throws InterruptedException {

        game = new Hippodrome(new ArrayList<>());

        Horse horse1 = new Horse("лош1", 3, 0);
        Horse horse2 = new Horse("лош2", 3, 0);
        Horse horse3 = new Horse("лош3", 3, 0);

        game.getHorses().add(horse1);
        game.getHorses().add(horse2);
        game.getHorses().add(horse3);

        game.run();
        game.printWinner();

    }
}
